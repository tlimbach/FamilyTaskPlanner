export*from"@vaadin/grid/vaadin-grid.js";import{forwardRef as c,useLayoutEffect as g,useRef as G}from"react";import{Grid as m}from"@vaadin/grid/vaadin-grid.js";import*as l from"react";import{createComponent as p}from"./utils/createComponent.js";var s={onActiveItemChanged:"active-item-changed",onCellActivate:"cell-activate",onColumnResize:"column-resize",onExpandedItemsChanged:"expanded-items-changed",onLoadingChanged:"loading-changed",onItemToggle:"item-toggle",onSelectedItemsChanged:"selected-items-changed",onCellFocus:"cell-focus",onColumnReorder:"column-reorder",onGridDragend:"grid-dragend",onGridDragstart:"grid-dragstart",onGridDrop:"grid-drop",onSizeChanged:"size-changed",onDataProviderChanged:"data-provider-changed"},r=p({elementClass:m,events:s,react:l,tagName:"vaadin-grid"});import{useModelRenderer as E}from"./renderers/useModelRenderer.js";import v from"./utils/useMergedRefs.js";import{jsxs as R}from"react/jsx-runtime";function u(e,n){let[o,a]=E(e.rowDetailsRenderer,{renderMode:"microtask"}),t=G(null),d=v(t,n);return g(()=>{t.current.recalculateColumnWidths=function(...i){queueMicrotask(()=>{Object.getPrototypeOf(this).recalculateColumnWidths.call(this,...i)})}},[]),R(r,{...e,ref:d,rowDetailsRenderer:a,children:[e.children,o]})}var D=c(u);export{D as Grid,m as GridElement};
//# sourceMappingURL=Grid.js.map
